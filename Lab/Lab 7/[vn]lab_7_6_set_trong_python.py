# -*- coding: utf-8 -*-
"""[VN]_Lab_7_6_Set trong Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V7G1g-uNUZTWtKghNXQl0uhNbx7We7s6

# Lab 7.6 Set trong Python

Thời lượng ước tính: **20** phút

## Mục tiêu

Sau khi hoàn thành lab này, bạn sẽ có thể:

-   Làm việc với set trong Python, gồm các thao tác và phép toán logic.

<h2>Mục lục</h2>
<div class="alert alert-block alert-info" style="margin-top: 20px">
    <ul>
        <li>
            <a href="#set">Set (Tập hợp)</a>
            <ul>
                <li><a href="content">Nội dung Set</a></li>
                <li><a href="op">Các thao tác với Set</a></li>
                <li><a href="logic">Phép toán logic với Set</a></li>
            </ul>
        </li>
        <li>
            <a href="#quiz">Quiz về Set</a>
        </li>
    </ul>
 
</div>

<hr>

<h2 id="set">Set (Tập hợp)</h2>

<h3 id="content">Nội dung Set</h3>

Set là một tập hợp các đối tượng duy nhất trong Python. Bạn có thể biểu thị set bằng dấu ngoặc nhọn <b>{}</b>. Python sẽ tự động loại bỏ các mục trùng lặp:
"""

# Create a set

set1 = {"pop", "rock", "soul", "hard rock", "rock", "R&B", "rock", "disco"}
set1

"""Quá trình lập bản đồ được minh họa trong hình:

<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsUnique.png" width="1100" />

Bạn cũng có thể tạo một set từ một list như sau:
"""

# Convert list to set

album_list = [ "Michael Jackson", "Thriller", 1982, "00:42:19", \
              "Pop, Rock, R&B", 46.0, 65, "30-Nov-82", None, 10.0]
album_set = set(album_list)             
album_set

"""Bây giờ chúng ta hãy tạo một set các thể loại:

"""

# Convert list to set

music_genres = set(["pop", "pop", "rock", "folk rock", "hard rock", "soul", \
                    "progressive rock", "soft rock", "R&B", "disco"])
music_genres

"""<h3 id="op">Các thao tác với Set</h3>

Hãy xem xét các thao tác với set có thể sử dụng để thay đổi set. Hãy xem xét set <b> A</b>:
"""

# Sample set

A = set(["Thriller", "Back in Black", "AC/DC"])
A

"""Chúng ta có thể thêm một phần tử vào set bằng phương thức <code> add()</code>:"""

# Add element to set

A.add("NSYNC")
A

"""Nếu chúng ta cùng thêm một phần tử hai lần, sẽ không có gì xảy ra vì không thể có sự trùng lặp trong một set:"""

# Try to add duplicate element to the set

A.add("NSYNC")
A

"""Chúng ta có thể xóa một mục khỏi set bằng phương thức <code> remove</code>:

"""

# Remove the element from set

A.remove("NSYNC")
A

"""Chúng ta có thể xác minh xem một phần tử có trong set hay không bằng cách sử dụng lệnh <code> in</code>:"""

# Verify if the element is in the set

"AC/DC" in A

"""<h3 id="logic">Phép toán logic với Set</h3>

Với các set, bạn có thể kiểm tra sự khác biệt giữa chúng, cũng như sự khác biệt đối xứng, phần giao và phần hợp:

Xem xét 2 set sau:
"""

# Sample Sets

album_set1 = set(["Thriller", 'AC/DC', 'Back in Black'])
album_set2 = set([ "AC/DC", "Back in Black", "The Dark Side of the Moon"])

"""<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsSamples.png" width="650" />

"""

# Print two sets

album_set1, album_set2

"""Vì cả hai set đều chứa <b> AC/DC</b> và <b> Back in Black </b> nên chúng ta thể hiện các phần tử chung này bằng giao của hai vòng tròn.

<img src = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsLogic.png" width = "650" />

Bạn có thể tìm giao của hai set như sau bằng cách sử dụng <code> &</code>:
"""

# Find the intersections

intersection = album_set1 & album_set2
intersection

"""Bạn có thể tìm thấy tất cả các phần tử chỉ có trong <code> album_set1</code> bằng phương thức <code> difference</code>:"""

# Find the difference in set1 but not set2

album_set1.difference(album_set2)

"""Bạn chỉ cần xem xét các phần tử trong <code> album_set1</code>; không bao gồm tất cả các phần tử trong <code> album_set2</code> và phần giao nhau.

<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsLeft.png" width="650" />

Các phần tử trong <code> album_set2</code>, không phải trong <code> album_set1 </code>, được cung cấp bởi:
"""

album_set2.difference(album_set1)

"""<img src = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsRight.png" width="650" />

Bạn cũng có thể tìm giao của <code> album_list1</code> và <code> album_list2</code> sử dụng phương thức <code>intersection</code>:
"""

# Use intersection method to find the intersection of album_list1 and album_list2

album_set1.intersection(album_set2)

"""Điều này tương đương với giao của hai vòng tròn:

<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsIntersect.png" width="650" />

Hợp tương ứng với tất cả các phần tử ở cả hai tập hợp được biểu thị bằng cách tô màu cả hai vòng tròn:

<img src = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%202/images/SetsUnion.png" width="650" />

Hợp được cho bởi:
"""

# Find the union of two sets

album_set1.union(album_set2)

"""Và bạn có thể kiểm tra xem một set (tập hợp) tương ứng là superset (tập cha) hay subset (tập con) của set khác như sau:"""

# Check if superset

set(album_set1).issuperset(album_set2)

# Check if subset

set(album_set2).issubset(album_set1)

"""Dưới đây là một ví dụ trong đó <code> issubset()</code> và <code> issuperset()</code> trả về true:"""

# Check if subset

set({"Back in Black", "AC/DC"}).issubset(album_set1)

# Check if superset

album_set1.issuperset({"Back in Black", "AC/DC"})

"""<hr>

<h2 id="quiz">Quiz về Set</h2>

Chuyển đổi list <code> ['rap','house','electronic music', 'rap']</code> thành một set:
"""

# Write your code below and press Shift+Enter to execute
set(['rap','house','electronic music', 'rap'])

"""<details><summary>Click vào đây để xem lời giải</summary>

```python
set(['rap','house','electronic music','rap'])

```

</details>

<hr>

Cho list <code>A = [1, 2, 2, 1]</code> và set <code>B = set([1, 2, 2, 1])</code>, thực hiện <code>sum(A) = sum(B)</code>
"""

# Write your code below and press Shift+Enter to execute
A = [1, 2, 2, 1]
B = set([1, 2, 2, 1])
print("the sum of A is:", sum(A))
print("the sum of B is:", sum(B))

"""<details><summary>Click vào đây để xem lời giải</summary>

```python
A = [1, 2, 2, 1]  
B = set([1, 2, 2, 1])
print("the sum of A is:", sum(A))
print("the sum of B is:", sum(B))

```

</details>

<hr>

Tạo set mới <code>album_set3</code> là hợp của <code>album_set1</code> và <code>album_set2</code>:
"""

# Write your code below and press Shift+Enter to execute

album_set1 = set(["Thriller", 'AC/DC', 'Back in Black'])
album_set2 = set([ "AC/DC", "Back in Black", "The Dark Side of the Moon"])
album_set3 = album_set1.union(album_set2)
album_set3

"""<details><summary>Click vào đây để xem lời giải</summary>

```python
album_set3 = album_set1.union(album_set2)
album_set3

```

</details>

<hr>

Tìm xem liệu <code>album_set1</code> có là subset của <code>album_set3</code>:
"""

# Write your code below and press Shift+Enter to execute
album_set1.issubset(album_set3)

"""<details><summary>Click vào đây để xem lời giải</summary>

```python
album_set1.issubset(album_set3)

```

</details>

<hr>
<p> Nguồn: IBM
<hr>
"""