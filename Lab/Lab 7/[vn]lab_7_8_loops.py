# -*- coding: utf-8 -*-
"""[VN]_Lab_7_8_Loops.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WHxX3UFSeCL2YZaBOpdewXmWNY8kF1Qf

#Lab 7.8 Vòng lặp trong Python

Thời lượng ước tính: **20** phút

## Mục tiêu

Sau khi hoàn thành lab này, bạn sẽ có thể:

-  Làm việc với các câu lệnh vòng lặp trong Python gồm vòng lặp for và vòng lặp while.

<h1>Vòng lặp trong Python</h1>

<p><strong>Xin chào!</strong> Notebook này sẽ dạy bạn về các vòng lặp trong Ngôn ngữ lập trình Python. Ở cuối lab này, bạn sẽ biết cách sử dụng các câu lệnh vòng lặp trong Python, gồm cả vòng lặp for và vòng lặp while.</p>

<h2>Mục lục</h2>
<div class="alert alert-block alert-info" style="margin-top: 20px">
    <ul>
        <li>
            <a href="#loop">Vòng lặp</a>
            <ul>
                <li><a href="range">Range</a></li>
                <li><a href="for">What is <code>for</code> loop?</a></li>
                <li><a href="while">What is <code>while</code> loop?</a></li>
            </ul>
        </li>
        <li>
            <a href="#quiz">Quiz on Loops</a>
        </li>
    </ul>

</div>

<hr>

<h2 id="loop">Vòng lặp</h2>

<h3 id="range">Range</h3>

Đôi khi, bạn có thể muốn lặp lại một thao tác nhất định nhiều lần. Những lần thực thi lặp đi lặp lại như thế này được thực hiện bởi các <b> vòng lặp</b>. Chúng ta sẽ xem xét hai loại vòng lặp: vòng lặp <code> for</code> và vòng lặp <code> while</code>.

Trước khi nói về vòng lặp, chúng ta hãy thảo luận về đối tượng <code> range</code>. Hãy coi range như một danh sách có thứ tự. Còn bây giờ, chúng ta hãy xem xét trường hợp đơn giản nhất. Nếu muốn tạo một đối tượng có chứa các phần tử được sắp xếp từ 0 đến 2, chúng ta chỉ cần sử dụng lệnh sau:
"""

# Use the range

range(3)

"""<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%203/images/range.PNG" width="300" />

**_LƯU Ý: Trong Python 2.x, sẽ trả về một danh sách như đã thấy trong các bài học video, trong 3.x, nó trả về một đối tượng range._**

<h3 id="for">Vòng lặp <code>for</code> là gì?</h3>

Vòng lặp <code> for</code> cho phép bạn thực thi một khối code nhiều lần. Ví dụ, bạn sẽ dùng nó nếu bạn muốn in ra mọi phần tử trong một list.

Hãy thử dùng vòng lặp <code> for</code> để in tất cả các năm được trình bày trong list <code> date </code>:

Điều này có thể thực hiện như sau:
"""

# For loop example

dates = [1982,1980,1973]
N = len(dates)

for i in range(N):
    print(dates[i])

"""Code sau thụt lề được thực thi <code> N</code> lần, giá trị của <code> i</code> được tăng lên 1 cho mỗi lần thực thi. Câu lệnh được thực thi để <code> in</code> ra giá trị trong list tại chỉ mục <code> i</code> như được hiển thị ở đây:

<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%203/images/LoopsForRange.gif" width="800" />

Trong ví dụ này, chúng ta có thể in ra một dãy số từ 0 đến 7:
"""

# Example of for loop

for i in range(0, 8):
    print(i)

"""Trong Python, chúng ta có thể truy cập trực tiếp các phần tử trong list như sau:"""

# Exmaple of for loop, loop through list

for year in dates:  
    print(year)

"""Đối với mỗi lần lặp, giá trị của biến <code> years</code> hoạt động giống như giá trị của <code> dates[i]</code> trong ví dụ đầu tiên:

<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%203/images/LoopsForList.gif" width="800">

Chúng ta thay đổi các phần tử trong một list:
"""

# Use for loop to change the elements in list

squares = ['red', 'yellow', 'green', 'purple', 'blue']

for i in range(0, 5):
    print("Before square ", i, 'is',  squares[i])
    squares[i] = 'white'
    print("After square ", i, 'is',  squares[i])

"""Chúng ta có thể truy cập chỉ mục và các phần tử của list như sau:"""

# Loop through the list and iterate on both index and element value

squares=['red', 'yellow', 'green', 'purple', 'blue']

for i, square in enumerate(squares):
    print(i, square)

"""<h3 id="while">Vòng lặp <code>while</code> là gì?</h3>

Như bạn thấy, vòng lặp <code> for</code> được sử dụng cho luồng lặp lại có kiểm soát. Tuy nhiên, điều gì sẽ xảy ra nếu chúng ta không biết khi nào muốn dừng vòng lặp? Điều gì sẽ xảy ra nếu chúng ta muốn tiếp tục thực hiện một khối code cho đến khi một điều kiện nhất định được đáp ứng? Vòng lặp <code> while</code> tồn tại như một công cụ để thực hiện lặp lại dựa trên một điều kiện. Khối code sẽ tiếp tục được thực thi cho đến khi điều kiện logic nhất định trả về giá trị boolean **False**.

Giả sử chúng ta muốn lặp lại list <code> dates</code> và dừng lại ở năm 1973, sau đó in ra số lần lặp lại. Điều này có thể được thực hiện với khối code sau:
"""

# While Loop Example

dates = [1982, 1980, 1973, 2000]

i = 0
year = dates[0]

while(year != 1973):    
    print(year)
    i = i + 1
    year = dates[i]
    

print("It took ", i ,"repetitions to get out of loop.")

"""Vòng lặp while chỉ lặp đi lặp lại cho đến khi điều kiện trong đối số không được đáp ứng, như trong hình sau:

<img src="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0101EN-SkillsNetwork/labs/Module%203/images/LoopsWhile.gif" width="650" />

<hr>

<h2 id="quiz">Quiz về Vòng lặp</h2>

Viết vòng lặp <code> for</code> để in ra tất cả phần tử trong khoảng từ <b> -5 </b> đến <b> 5 </b> bằng hàm range.
"""

# Write your code below and press Shift+Enter to execute
for i in range(-5,5):
  print(i)

"""<details><summary>Bấm vào đây để xem đáp án</summary>

```python
for i in range(-5, 6):
    print(i)
    
```

</details>

In các phần tử của danh sách sau:
<code> Genres=['rock', 'R&B', 'Soundtrack', 'R&B', 'soul', 'pop']</code>
Đảm bảo rằng bạn tuân theo các quy ước của Python.
"""

# Write your code below and press Shift+Enter to execute
Genres=['rock', 'R&B', 'Soundtrack', 'R&B', 'soul', 'pop']

for i in Genres:
  print(i)

"""<details><summary>Bấm vào đây để xem đáp án</summary>

```python
Genres = ['rock', 'R&B', 'Soundtrack', 'R&B', 'soul', 'pop']
for Genre in Genres:
    print(Genre)
    
```

</details>

<hr>

Viết vòng lặp for in ra danh sách sau: <code> square=['red', 'yellow', 'green', 'Purple', 'blue']</code>
"""

# Write your code below and press Shift+Enter to execute
square=['red', 'yellow', 'green', 'Purple', 'blue']

for i in square:
  print(i)

"""<details><summary>Bấm vào đây để xem đáp án</summary>

```python
squares=['red', 'yellow', 'green', 'purple', 'blue']
for square in squares:
    print(square)
    
```

</details>

<hr>

Viết vòng lặp while để hiển thị các giá trị Xếp hạng của danh sách phát album được lưu trữ trong list <code>PlayListRatings</code>. Nếu điểm nhỏ hơn 6, thoát khỏi vòng lặp. List <code>PlayListRatings</code> được cho: <code> PlayListRatings = [10, 9.5, 10, 8, 7.5, 5, 10, 10]</code>
"""

# Write your code below and press Shift+Enter to execute
PlayListRatings = [10, 9.5, 10, 8, 7.5, 5, 10, 10]

for i in PlayListRatings:
  if i < 6:
    PlayListRatings.remove(i)
PlayListRatings

"""<details><summary>Bấm vào đây để xem đáp án</summary>

```python
PlayListRatings = [10, 9.5, 10, 8, 7.5, 5, 10, 10]
i = 1
Rating = PlayListRatings[0]
while(i < len(PlayListRatings) and Rating >= 6):
    print(Rating)
    Rating = PlayListRatings[i]
    i = i + 1
    
```

</details>

<hr>

Viết vòng lặp while để sao chép các string <code> 'orange'</code> của list <code>squares</code> vào list <code>new_squares</code>. Dừng và thoát khỏi vòng lặp nếu giá trị trên danh sách không phải là <code>'orange'</code>:
"""

# Write your code below and press Shift+Enter to execute

squares = ['orange', 'orange', 'purple', 'blue ', 'orange']
new_squares = []
for i in squares:
  if i != 'orange':
    new_squares.append(i)

new_squares

"""<details><summary>Bấm vào đây để xem đáp án</summary>

```python
squares = ['orange', 'orange', 'purple', 'blue ', 'orange']
new_squares = []
i = 0
while(i < len(squares) and squares[i] == 'orange'):
    new_squares.append(squares[i])
    i = i + 1
print (new_squares)
    
```

</details>

<hr>
Nguồn: IBM
<hr>
"""